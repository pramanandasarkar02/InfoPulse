

services:
  newsfetching:
    build:
      context: ./info-pulse-api/news-fetching-service
      dockerfile: Dockerfile
    ports:
      - "4041:3001"
    environment:
      - NODE_ENV=production
    restart: unless-stopped

  newsprocessing:
    build:
      context: ./info-pulse-api/news-processing-service
      dockerfile: Dockerfile
    ports:
      - "4042:3002"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
  userservice:
    build:
      context: ./info-pulse-api/user-service
      dockerfile: Dockerfile
    ports:
      - "4043:3003"      
    restart: unless-stopped
  usersearching:
    build:
      context: ./info-pulse-api/user-searching-service
      dockerfile: Dockerfile
    ports:
      - "4044:3004"
    restart: unless-stopped
  newsrecommendation:
    build:
      context: ./info-pulse-api/user-recommendation-service
      dockerfile: Dockerfile
    ports:
      - "4045:3005"
    restart: unless-stopped
  usermonitoring:
    build:
      context: ./info-pulse-api/user-monitoring-service
      dockerfile: Dockerfile
    ports:
      - "4046:3006"
    environment:
      - NODE_ENV=production
    restart: unless-stopped

  apigateway:
    build:
      context: ./info-pulse-api/api-gateway
      dockerfile: Dockerfile
    ports:
      - "4040:3000"
    environment:
      - NODE_ENV=production
    restart: unless-stopped

  

  frontend:
    build:
      context: ./web-client
      dockerfile: Dockerfile
    ports:
      - "5050:5050"
    environment:
      - NODE_ENV=production
    restart: unless-stopped

  postgres:
    image: postgres:14-alpine
    ports:
      - 5432:5432
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=S3cret
      - POSTGRES_USER=pguser
      - POSTGRES_DB=user-db
volumes:
  postgres_data: